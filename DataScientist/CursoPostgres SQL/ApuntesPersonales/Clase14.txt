ROLES

Que puede hacer un ROLE

Crear y Eliminar
Asignar atributos
Agrupar con otros roles
Roles predeterminados

-- Ver las funciones del comando CREATE ROLE (help)
\h CREATE ROLE;

-- Creamos un ROLE (consultas -&gt; lectura, insertar, actualizar)
CREATE ROLE usuario_consulta;

-- Mostrar todos los usuarios junto a sus atributos
\dg

-- Agregamos atributos al usuario o role
ALTER ROLE  usuario_consulta WITH LOGIN;
ALTER ROLE  usuario_consulta WITH SUPERUSER;
ALTER ROLE  usuario_consulta WITH PASSWORD'1234';

-- Elimanos el usuario o role
DROP ROLE usuario_consulta;

-- La mejor forma de crear un usuario o role por pgadmin
CREATE ROLE usuario_consulta WITH
  LOGIN
  NOSUPERUSER
  NOCREATEDB
  NOCREATEROLE
  INHERIT
  NOREPLICATION
  CONNECTION LIMIT -1
  PASSWORD'1234';

--Para obtorgar privilegios a nuestro usuario_consulta
GRANT INSERT, SELECT, UPDATE ON TABLE public.estacion TO usuario_consulta;
GRANT INSERT, SELECT, UPDATE ON TABLE public.pasajero TO usuario_consulta;
GRANT INSERT, SELECT, UPDATE ON TABLE public.trayecto TO usuario_consulta;
GRANT INSERT, SELECT, UPDATE ON TABLE public.tren TO usuario_consulta;
GRANT INSERT, SELECT, UPDATE ON TABLE public.viaje TO usuario_consulta;


Desde sqlshell podemos crear roles, los roles son independiente de la base de datos, el comando para crear un rol es CREATE ROLE o CREATE USER, después de la versión 9.3 de postgres ambos comandos hacen lo mismo, en este ejemplo usaremos CREATE ROLE  

Podemos ver todas las características que tiene la sentencia CREATE ROLE con \h CREATE ROL   Bien, creemos un rol que tenga la capacidad de hacer login y le asignaremos una contraseña. Es muy bueno tener 2 roles diferentes, uno podria ser el usuario postgres que me permite crear bases de datos, borrar tablas, etc, y otro que me sirva únicamente para insertar, consultar y crear tablas pero no de eliminar o borrar bases de datos


CREATE ROLE usuario_consulta;
Al crearlo así, este no tendrá contraseña y va a poseer todas las características predeterminadas de postgres

Si queremos ver todos los usuarios creados lo podemos hacer con el comando \dg

1.PNG
  Ahora queremos que este rol que acabamos de crear tenga acceso a poder acceder a la base de datos, así que vamos a editarlo


ALTER ROLE usuario_consulta WITH LOGIN; --Para que pueda logearse
Y luego le asignamos una contraseña


ALTER ROLE usuario_consulta WITH PASSWORD 'nuestraContraseña';
Ahora ya podemos acceder a la consola con este rol

2.PNG
  Con el comando DROP ROLE nombre_rol, podemos eliminar roles